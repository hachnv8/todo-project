version: '3.8'

networks:
  infra-net:
    external: true

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:8.7.0
    container_name: zookeeper
    networks:
      - infra-net
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:8.7.0
    container_name: kafka
    depends_on:
      - zookeeper
    networks:
      - infra-net
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_LISTENERS: INTERNAL://0.0.0.0:29092,EXTERNAL://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:29092,EXTERNAL://36.50.135.128:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  mysql:
    image: mysql:8.0
    container_name: mysql
    networks:
      - infra-net
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: Hach1997!
      MYSQL_DATABASE: tododb
      MYSQL_USER: root
      MYSQL_PASSWORD: Hach1997!
    volumes:
      - mysql_data:/var/lib/mysql

  redis:
    image: redis:7.0
    container_name: redis
    networks:
      - infra-net
    ports:
      - "6379:6379"
    volumes:
      - ./redis.conf:/usr/local/etc/redis/redis.conf
      - redis_data:/data
    command: ["redis-server", "/usr/local/etc/redis/redis.conf"]

  jenkins:
    image: jenkins/jenkins:lts
    container_name: jenkins
    networks:
      - infra-net
    ports:
      - "8080:8080"
      - "50000:50000"
    volumes:
      - jenkins_home:/var/jenkins_home

  nginx:
    image: nginx:latest
    container_name: nginx
    networks:
      - infra-net
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro

volumes:
  mysql_data:
  jenkins_home:
  redis_data:
